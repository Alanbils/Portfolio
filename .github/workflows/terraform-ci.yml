name: "Terraform CI"

on:
  push:
    branches:
      - main
    paths:
      - 'src/infrastructure/**'
  pull_request:
    paths:
      - 'src/infrastructure/**'

jobs:
  terraform-lint:
    name: "Terraform Lint"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive -diff ./src/infrastructure/terraform
        continue-on-error: true
        
      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      
      - name: Run tflint
        run: |
          cd src/infrastructure/terraform
          tflint --recursive
        
  terraform-security:
    name: "Terraform Security Scan"
    runs-on: ubuntu-latest
    needs: terraform-lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: src/infrastructure/terraform
          
  terraform-validate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest
    needs: terraform-lint
    strategy:
      matrix:
        module: [
          "data_lake",
          "data_warehouse",
          "data_catalog",
          "networking",
          "streaming"
        ]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          
      - name: Terraform Init
        id: init
        run: |
          cd src/infrastructure/terraform/modules/${{ matrix.module }}
          terraform init -backend=false
          
      - name: Terraform Validate
        id: validate
        run: |
          cd src/infrastructure/terraform/modules/${{ matrix.module }}
          terraform validate
          
  terragrunt-plan:
    name: "Terragrunt Plan - Dev"
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          
      - name: Setup Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.35.16/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Terragrunt Plan
        id: plan
        run: |
          cd src/infrastructure/environments/dev
          terragrunt run-all plan --terragrunt-non-interactive
        continue-on-error: true  # Don't fail the workflow if plan has changes
        
      - name: Post Plan to PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan üìù
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })