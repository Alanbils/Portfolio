name: "dbt CI"

on:
  push:
    branches:
      - main
    paths:
      - 'src/data/dbt/**'
  pull_request:
    paths:
      - 'src/data/dbt/**'

jobs:
  dbt-lint:
    name: "dbt Lint"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install SQLFluff
        run: pip install sqlfluff
        
      - name: Run SQLFluff Lint
        run: |
          cd src/data/dbt
          sqlfluff lint models/
          
  dbt-test:
    name: "dbt Build & Test"
    runs-on: ubuntu-latest
    needs: dbt-lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core dbt-redshift
          
      - name: Check dbt version
        run: dbt --version
        
      - name: dbt Dependencies
        run: |
          cd src/data/dbt
          dbt deps
          
      - name: Configure dbt profiles
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml << EOF
          default:
            target: ci
            outputs:
              ci:
                type: redshift
                host: ${REDSHIFT_HOST}
                user: ${REDSHIFT_USER}
                pass: ${REDSHIFT_PASSWORD}
                port: 5439
                dbname: analytics
                schema: ci_test
                threads: 4
                keepalives_idle: 240
                connect_timeout: 10
          EOF
        env:
          REDSHIFT_HOST: ${{ secrets.REDSHIFT_HOST }}
          REDSHIFT_USER: ${{ secrets.REDSHIFT_USER }}
          REDSHIFT_PASSWORD: ${{ secrets.REDSHIFT_PASSWORD }}
        
      - name: dbt Compile
        run: |
          cd src/data/dbt
          dbt compile
          
      - name: dbt Test
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
        run: |
          cd src/data/dbt
          dbt test
        continue-on-error: true
        
      - name: Generate dbt docs
        if: github.ref == 'refs/heads/main'
        run: |
          cd src/data/dbt
          dbt docs generate
          
      - name: Upload dbt docs artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: dbt-docs
          path: src/data/dbt/target/
          
  dbt-catalog:
    name: "Update Data Catalog"
    runs-on: ubuntu-latest
    needs: dbt-test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Download dbt docs artifact
        uses: actions/download-artifact@v3
        with:
          name: dbt-docs
          path: dbt-docs
          
      - name: Upload to S3
        run: |
          aws s3 cp dbt-docs/catalog.json s3://data-platform-documentation/dbt-docs/catalog.json
          aws s3 cp dbt-docs/manifest.json s3://data-platform-documentation/dbt-docs/manifest.json
          aws s3 cp dbt-docs/index.html s3://data-platform-documentation/dbt-docs/index.html